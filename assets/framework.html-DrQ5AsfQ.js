import{_ as t}from"./IMDLBenCo_overview-Bza_Vrxu.js";import{_ as a,c as i,a as c,e as n,r,o as d}from"./app-CCtLKDl1.js";const l={};function s(p,e){const o=r("CommentService");return d(),i("div",null,[e[0]||(e[0]=c('<h1 id="框架设计" tabindex="-1"><a class="header-anchor" href="#框架设计"><span>框架设计</span></a></h1><h2 id="概览" tabindex="-1"><a class="header-anchor" href="#概览"><span>概览</span></a></h2><p>IMDL-BenCo代码框架的设计概览图如下所示：</p><p><img src="'+t+'" alt=""></p><p>主要的组件包含：</p><ul><li>负责引入数据并进行预处理的<code>Dataloader</code></li><li>管理全部模型，特征提取器的<code>Model Zoo</code></li><li>基于GPU加速的<code>Evaluator</code>，用于计算评价指标</li></ul><p>上述类是整个框架中最精心设计的部分，可以认为是IMDL-BenCo的主要贡献。</p><p>此外还有辅助的一些组件，包含：</p><ul><li>数据集下载和管理工具<code>Data Library</code>和<code>Data Manager</code>（TODO）</li><li>全局的注册机制<code>Register</code>，可以实现从<code>str</code>到具体<code>class</code>或者<code>method</code>的映射，便于直接通过shell脚本调用相应的模型或方法，以便批量完成实验。</li><li>用于可视化分析结果的<code>visualize tools</code>，暂时只包含Tensorboard。</li></ul><p>以及一些零碎的工具，包含：</p><ul><li><code>PyTorch optimize tools</code>，主要是PyTorch训练相关的接口和工具。</li><li><code>Analysis tools</code>，主要是各种训练时或训练后，分析存档用的工具。</li></ul><p>所有上述工具，各自独立地构成了类或者函数，存在交互的组件间留有相应接口。最终，通过在多种<code>Training/Testing/Visualizing Scrips</code>中import调用并组合来实现相应的职责。</p><p>而整个IMDL-BenCo框架的CLI（命令行界面，Command Line Interface）则以类似Git中<code>git init</code>的行为，通过<code>benco init</code>自动地在合适的工作路径生成所有<strong>默认</strong>的<code>Training/Testing/Visualizing Scrips</code>脚本，供研究人员进行后续修改使用。</p><p>所以，我们尤其鼓励使用者按照需求修改<code>Training/Testing/Visualizing Scrips</code>的内容，完成对于框架功能的合理取用，满足自定义的需求。并根据图中的❄️、🔥标志建议、酌情对于标注为🔥的类按需创建新的类或修改、设计相应功能完成最相应的科研任务。</p><p>此外，数据集下载，模型checkpoint下载等等功能也是通过<code>benco data</code>等等CLI指令实现。</p>',15)),n(o)])}const g=a(l,[["render",s]]),u=JSON.parse('{"path":"/zh/guide/base/framework.html","title":"框架设计","lang":"zh-CN","frontmatter":{"description":"框架设计 概览 IMDL-BenCo代码框架的设计概览图如下所示： 主要的组件包含： 负责引入数据并进行预处理的Dataloader 管理全部模型，特征提取器的Model Zoo 基于GPU加速的Evaluator，用于计算评价指标 上述类是整个框架中最精心设计的部分，可以认为是IMDL-BenCo的主要贡献。 此外还有辅助的一些组件，包含： 数据集下...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://scu-zjz.github.io/IMDLBenCo-doc/IMDLBenCo-doc/guide/base/framework.html"}],["meta",{"property":"og:url","content":"https://scu-zjz.github.io/IMDLBenCo-doc/IMDLBenCo-doc/zh/guide/base/framework.html"}],["meta",{"property":"og:site_name","content":"IMDLBenCo 文档"}],["meta",{"property":"og:title","content":"框架设计"}],["meta",{"property":"og:description","content":"框架设计 概览 IMDL-BenCo代码框架的设计概览图如下所示： 主要的组件包含： 负责引入数据并进行预处理的Dataloader 管理全部模型，特征提取器的Model Zoo 基于GPU加速的Evaluator，用于计算评价指标 上述类是整个框架中最精心设计的部分，可以认为是IMDL-BenCo的主要贡献。 此外还有辅助的一些组件，包含： 数据集下..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://scu-zjz.github.io/IMDLBenCo-doc/IMDLBenCo-doc/images/IMDLBenCo_overview.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-04-03T10:12:18.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-03T10:12:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"框架设计\\",\\"image\\":[\\"https://scu-zjz.github.io/IMDLBenCo-doc/IMDLBenCo-doc/images/IMDLBenCo_overview.png\\"],\\"dateModified\\":\\"2025-04-03T10:12:18.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"概览","slug":"概览","link":"#概览","children":[]}],"git":{"updatedTime":1743675138000,"contributors":[{"name":"Ma Xiaochen (马晓晨)","username":"","email":"mxch1122@126.com","commits":2}],"changelog":[{"hash":"3adb8aa2f1fd3408eb9837aa011bf7048ae6230b","time":1743675138000,"email":"mxch1122@126.com","author":"Ma Xiaochen (马晓晨)","message":"[update] add comment plugin to all pages."},{"hash":"5d811035b21b91d3c59c0534fbc9afb3e2571ac9","time":1720041485000,"email":"mxch1122@126.com","author":"Ma Xiaochen (马晓晨)","message":"{update] 完善内容，修改导航栏侧边栏的bug"}]},"filePathRelative":"zh/guide/base/framework.md","autoDesc":true}');export{g as comp,u as data};
