import{_ as t,c as o,a as n,e as i,r,o as s}from"./app-CCtLKDl1.js";const l={};function d(c,e){const a=r("CommentService");return s(),o("div",null,[e[0]||(e[0]=n('<h1 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction"><span>Introduction</span></a></h1><h2 id="overview" tabindex="-1"><a class="header-anchor" href="#overview"><span>Overview</span></a></h2><p>IMDLBenCo is a modular deep learning toolkit designed for image manipulation detection and localization (IMDL) tasks based on the <a href="https://pytorch.org/" target="_blank" rel="noopener noreferrer">PyTorch</a> framework. It can be used for:</p><ul><li>Reproducing state-of-the-art (SoTA) models in IMDL</li><li>Creating your own IMDL models</li><li>Comparing the performance of various visual backbones and IMDL feature extractors in bulk</li></ul><h2 id="design-philosophy-and-advantages" tabindex="-1"><a class="header-anchor" href="#design-philosophy-and-advantages"><span>Design Philosophy and Advantages</span></a></h2><p>The design philosophy of IMDL-BenCo is to balance the <em><strong>customization needs of research code</strong></em> with the <em><strong>standardization requirements of deep learning frameworks</strong></em>, aiming to improve both experimental speed and code development efficiency.</p><p>Under this philosophy, IMDL-BenCo&#39;s framework has the following features and advantages:</p><ul><li>Easy to use: <ul><li>Unlike traditional frameworks (e.g., OpenMMLab and Detectron2), IMDL-BenCo does not rely on a <strong>registration mechanism</strong>. <ul><li>Facilitates IDE navigation to view class and function definitions without getting lost in the extensive documentation.</li></ul></li><li>Code style is highly similar to the native PyTorch framework, making it very easy for beginners in deep learning to start using it seamlessly.</li></ul></li><li>Fast: <ul><li>Based on CLI (Command Line Interface) code generation mechanism. <ul><li>Familiar with those who know CLI modes of web frontend frameworks like Vue, reducing time spent on framework code and focusing on model design and experimentation.</li><li>Meets flexible customization needs, allowing direct modifications to the generated code without hacking the framework source code.</li></ul></li><li>GPU-accelerated evaluation metrics calculation, much faster than native methods of machine learning libraries like Sklearn.</li><li>Advanced users can still use the registration mechanism for batch experiment management and efficiently conduct ablation studies.</li></ul></li><li>Comprehensive: <ul><li>Integrated common tampering detection dataset download and management (TODO)</li><li>Rich preprocessing algorithms, including various &quot;Naive Transform&quot; methods proposed by MVSS-Net, and support for custom preprocessing interfaces based on the <a href="https://albumentations.ai/" target="_blank" rel="noopener noreferrer">Albumentations</a> library.</li><li>Multiple SoTA models integrated, ready for experimentation and testing.</li><li>Various excellent backbones for visual tasks, such as ResNet, Swin, and SegFormer, are available for benchmarking experiments.</li><li>Multiple tampering detection feature extractors, including Sobel and BayarConv. <ul><li>Can be tested with backbones.</li><li>Can also be used independently of IMDL-BenCo by importing directly into other model code constructions.</li></ul></li><li>Multiple common tampering detection evaluation metrics integrated, including image-level and pixel-level F1, AUC, etc.</li><li>Integrated visualization tools like Tensorboard, only the input of images and scalars into specified interfaces are required.</li><li>Integrated complexity analysis (parameters, FLOPs), Grad-CAM, and other analysis tools for quick and easy completion of paper charts.</li></ul></li></ul><h2 id="motivation" tabindex="-1"><a class="header-anchor" href="#motivation"><span>Motivation</span></a></h2><p>The IMDL task has long faced issues such as inconsistent preprocessing, inconsistent training datasets, inconsistent evaluation metrics, non-open source models, and non-open source training codes, seriously affecting the fair comparison between models.</p><p>Therefore, we hope to alleviate the code burden of open-source work through a standardized and unified code framework, encouraging more open-source work. Furthermore, we aim to correctly and accurately evaluate and compare the performance of existing models, promoting a healthier, fairer, and more sustainable development of the IMDL field.</p>',11)),i(a)])}const h=t(l,[["render",d]]),p=JSON.parse('{"path":"/guide/base/introduction.html","title":"Introduction","lang":"en-US","frontmatter":{"description":"Introduction Overview IMDLBenCo is a modular deep learning toolkit designed for image manipulation detection and localization (IMDL) tasks based on the PyTorch framework. It can...","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://scu-zjz.github.io/IMDLBenCo-doc/IMDLBenCo-doc/zh/guide/base/introduction.html"}],["meta",{"property":"og:url","content":"https://scu-zjz.github.io/IMDLBenCo-doc/IMDLBenCo-doc/guide/base/introduction.html"}],["meta",{"property":"og:site_name","content":"IMDLBenCo Documentation"}],["meta",{"property":"og:title","content":"Introduction"}],["meta",{"property":"og:description","content":"Introduction Overview IMDLBenCo is a modular deep learning toolkit designed for image manipulation detection and localization (IMDL) tasks based on the PyTorch framework. It can..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-03T10:12:18.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-03T10:12:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Introduction\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-03T10:12:18.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Overview","slug":"overview","link":"#overview","children":[]},{"level":2,"title":"Design Philosophy and Advantages","slug":"design-philosophy-and-advantages","link":"#design-philosophy-and-advantages","children":[]},{"level":2,"title":"Motivation","slug":"motivation","link":"#motivation","children":[]}],"git":{"updatedTime":1743675138000,"contributors":[{"name":"Ma Xiaochen (马晓晨)","username":"","email":"mxch1122@126.com","commits":4},{"name":"Knight, Zhou","username":"","email":"zjz19900719@gmail.com","commits":1}],"changelog":[{"hash":"3adb8aa2f1fd3408eb9837aa011bf7048ae6230b","time":1743675138000,"email":"mxch1122@126.com","author":"Ma Xiaochen (马晓晨)","message":"[update] add comment plugin to all pages."},{"hash":"5d811035b21b91d3c59c0534fbc9afb3e2571ac9","time":1720041485000,"email":"mxch1122@126.com","author":"Ma Xiaochen (马晓晨)","message":"{update] 完善内容，修改导航栏侧边栏的bug"},{"hash":"1420b7cfb2a34d7b576d07a870cfc2da65423277","time":1719899176000,"email":"zjz19900719@gmail.com","author":"Knight, Zhou","message":"Update introduction.md"},{"hash":"a8f6cb56d3483ba336ed64a05ab07ab637eb4db7","time":1719873732000,"email":"mxch1122@126.com","author":"Ma Xiaochen (马晓晨)","message":"[update] add install for developer"},{"hash":"c71bf1475c5477e026be4d4a8bb970dcb239b05e","time":1719867818000,"email":"mxch1122@126.com","author":"Ma Xiaochen (马晓晨)","message":"[update] add inrtro to guide, en &amp; zh"}]},"filePathRelative":"guide/base/introduction.md","autoDesc":true}');export{h as comp,p as data};
